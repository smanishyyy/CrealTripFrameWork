Switch Statement in Java
The switch statement is a multi-way branch statement. It provides an easy way to dispatch 
execution to different parts of code based on the value of the expression. Basically, the 
expression can be byte, short, char, and int primitive data types. Beginning with JDK7,
 it also works with enumerated types ( Enums in java), the String class and Wrapper classes.
 
 
Some Important rules for switch statements :

Duplicate case values are not allowed.
The value for a case must be of the same data type as the variable in the switch.
The value for a case must be a constant or a literal. Variables are not allowed.
The break statement is used inside the switch to terminate a statement sequence.
The break statement is optional. If omitted, execution will continue on into the next case.
The default statement is optional and can appear anywhere inside the switch block. In case, if 
it is not at the end, then a break statement must be kept after the default statement to omit
 the execution of the next case statement.
 
 Omitting the break statement

As break statement is optional. If we omit the break, execution will continue on 
into the next case. It is sometimes desirable to have multiple cases without break
 statements between them.
 
 
 Nested Switch Case statements

We can use a switch as part of the statement sequence of an outer switch.
 This is called a nested switch. Since a switch statement defines its own block, 
 no conflicts arise between the case constants in the inner switch and those in the outer
  switch.